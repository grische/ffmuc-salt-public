map $http_user_agent $autoupdater {
    "Gluon Autoupdater (using libuclient)" 1;
    default                                0;
}

map $http_x_firmware_version $firmwareVersion {
    "~^v(\d+)\.(\d+)\.(\d+)" $1.$2.$3;
    default                  "unknown";
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name firmware.ffmuc.net firmware.in.ffmuc.net "";

    client_max_body_size 2048M;

    root /srv/www/firmware.ffmuc.net;

    fancyindex on;
    fancyindex_exact_size off;
    fancyindex_localtime on;
    fancyindex_default_sort name;

    location = / {
        if ($scheme = http) {
            return 301 https://firmware.ffmuc.net;
        }
    }

    location ~ ^/(stable|testing|experimental)/ {
        # for accessing it e.g. via ffmuc.net/firmware
        add_header Access-Control-Allow-Origin "*";
        if($autoupdater) {
            if ($firmwareVersion < "2024.4.2") {
                return 302 /v2024.4.2_v2022.5.7;
            }
        }
    }

    location ^~ /.well-known/acme-challenge/ {
    }

    location ^~  /.gluon-firmware-selector {
    }

    location /raw {
        index none;
        alias /srv/www/firmware.ffmuc.net;
    }

    # opkg mirror
    location ~^/openwrt/(?<file>.+)$ {
        return 302 http://ftp.stw-bonn.de/pub/openwrt/$file;
    }

    location ~ /\. {
        deny all;
    }

    # opkg mirror
    location ~^/openwrt/(?<file>.+)$ {
        return 302 http://ftp.stw-bonn.de/pub/openwrt/$file;
    }

    # lede mirror
    location ~^/lede/(?<file>.+)$ {
        return 302 http://downloads.lede-project.org/releases/$file;
    }

    location /wpad.dat {
        access_log  off;
        error_log  off;
        default_type text/plain;
        return 200 'OK';
    }

    ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;

    access_log /var/log/nginx/{{ domain }}_access.log json_normal;
    error_log  /var/log/nginx/{{ domain }}_error.log;
}
